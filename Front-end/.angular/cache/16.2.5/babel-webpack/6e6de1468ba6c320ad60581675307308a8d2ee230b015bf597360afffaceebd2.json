{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:5432';\n  }\n  findAll() {\n    return this.http.get(this.backendUrl + '/events');\n  }\n  static #_ = this.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventService","constructor","http","backendUrl","findAll","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\guigu\\Desktop\\EPF\\5A\\java\\TrackEvent\\Front-end\\src\\app\\services\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Event} from \"models/event.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  private backendUrl = 'http://localhost:5432';\n  constructor(private http: HttpClient) {}\n  findAll(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.backendUrl + '/events');\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,UAAU,GAAG,uBAAuB;EACL;EACvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,UAAU,GAAG,SAAS,CAAC;EAC5D;EAAC,QAAAG,CAAA,G;qBANUN,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}