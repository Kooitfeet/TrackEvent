{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrgaService {\n  constructor(http) {\n    this.http = http;\n    this.backendUrl = 'http://localhost:8080';\n  }\n  findAll() {\n    return this.http.get(this.backendUrl + '/orga/all');\n  }\n  findById(id) {\n    return this.http.get(this.backendUrl + `orga/id:${id}`);\n  }\n  static #_ = this.ɵfac = function OrgaService_Factory(t) {\n    return new (t || OrgaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrgaService,\n    factory: OrgaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["OrgaService","constructor","http","backendUrl","findAll","get","findById","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\guigu\\Desktop\\EPF\\5A\\java\\TrackEventV2\\TrackEvent\\Front-end\\src\\app\\services\\orga.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Event} from \"../models/event.model\";\nimport {Orga} from \"../models/orga.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgaService {\n  private backendUrl = 'http://localhost:8080';\n  constructor(private http: HttpClient) {}\n  findAll(): Observable<Orga[]> {\n    return this.http.get<Orga[]>(this.backendUrl + '/orga/all');\n  }\n\n  findById(id: number): Observable<Orga> {\n    return this.http.get<Orga>(this.backendUrl + `orga/id:${id}`);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,UAAU,GAAG,uBAAuB;EACL;EACvCC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,UAAU,GAAG,WAAW,CAAC;EAC7D;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAO,IAAI,CAACF,UAAU,GAAG,WAAWI,EAAE,EAAE,CAAC;EAC/D;EAAC,QAAAC,CAAA,G;qBATUR,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXb,WAAW;IAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}