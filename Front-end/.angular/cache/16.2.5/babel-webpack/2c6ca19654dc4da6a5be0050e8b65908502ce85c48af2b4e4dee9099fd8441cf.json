{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BehaviorSubject } from \"rxjs\";\nexport let MyEventsComponent = class MyEventsComponent {\n  constructor(_route, eventService, publicService) {\n    this._route = _route;\n    this.eventService = eventService;\n    this.publicService = publicService;\n    this.eventParticipate$ = new BehaviorSubject([]);\n    this.eventsIDs = [1, 2];\n  }\n  ngOnInit() {\n    this.publicService.findById(2).subscribe(data => {\n      this.eventsIDs = data.organise;\n      this.eventService.findMultipleByIds(this.eventsIDs).subscribe(events => {\n        this.eventParticipate$.next(events);\n      });\n    });\n  }\n  ButtonParticipate(event) {\n    const buttonElement = event.currentTarget;\n    if (buttonElement) {\n      if (buttonElement.style.backgroundColor === 'red') {\n        buttonElement.style.backgroundColor = 'grey';\n      } else {\n        buttonElement.style.backgroundColor = 'red';\n      }\n    }\n  }\n  ButtonLike(event) {\n    const buttonElement = event.currentTarget;\n    if (buttonElement) {\n      if (buttonElement.style.backgroundColor === 'red') {\n        buttonElement.style.backgroundColor = 'grey';\n      } else {\n        buttonElement.style.backgroundColor = 'red';\n        console.log(\"test requête\");\n      }\n    }\n  }\n};\nMyEventsComponent = __decorate([Component({\n  selector: 'app-my-events',\n  templateUrl: './my-events.component.html',\n  styleUrls: ['./my-events.component.css']\n})], MyEventsComponent);","map":{"version":3,"names":["Component","BehaviorSubject","MyEventsComponent","constructor","_route","eventService","publicService","eventParticipate$","eventsIDs","ngOnInit","findById","subscribe","data","organise","findMultipleByIds","events","next","ButtonParticipate","event","buttonElement","currentTarget","style","backgroundColor","ButtonLike","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\guigu\\Desktop\\EPF\\5A\\java\\TrackEventV2\\TrackEvent\\Front-end\\src\\app\\my-events\\my-events.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Event} from \"../models/event.model\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {OrgaService} from \"../services/orga.service\";\nimport {EventService} from \"../services/event.service\";\n\n@Component({\n  selector: 'app-my-events',\n  templateUrl: './my-events.component.html',\n  styleUrls: ['./my-events.component.css']\n})\nexport class MyEventsComponent {\n\n  eventParticipate$: BehaviorSubject<Event[]> = new BehaviorSubject<Event[]>([]);\n  eventsIDs = [1, 2];\n  constructor(private _route: ActivatedRoute, private eventService: EventService, private publicService: PublicService) {}\n\n  ngOnInit() {\n    this.publicService.findById(2).subscribe((data) => {\n      this.eventsIDs = data.organise;\n      this.eventService.findMultipleByIds(this.eventsIDs).subscribe((events: Event[]) => {\n        this.eventParticipate$.next(events);\n      });\n    });\n  }\n  ButtonParticipate(event: MouseEvent) {\n    const buttonElement = event.currentTarget as HTMLButtonElement;\n\n    if (buttonElement) {\n      if (buttonElement.style.backgroundColor === 'red') {\n        buttonElement.style.backgroundColor = 'grey';\n      } else {\n        buttonElement.style.backgroundColor = 'red';\n      }\n    }\n  }\n\n  ButtonLike(event: MouseEvent) {\n    const buttonElement = event.currentTarget as HTMLButtonElement;\n\n    if (buttonElement) {\n      if (buttonElement.style.backgroundColor === 'red') {\n        buttonElement.style.backgroundColor = 'grey';\n      } else {\n        buttonElement.style.backgroundColor = 'red';\n        console.log(\"test requête\")\n\n\n\n\n      }\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAQC,eAAe,QAAwB,MAAM;AAW9C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,MAAsB,EAAUC,YAA0B,EAAUC,aAA4B;IAAhG,KAAAF,MAAM,GAANA,MAAM;IAA0B,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,aAAa,GAAbA,aAAa;IAFrG,KAAAC,iBAAiB,GAA6B,IAAIN,eAAe,CAAU,EAAE,CAAC;IAC9E,KAAAO,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACqG;EAEvHC,QAAQA,CAAA;IACN,IAAI,CAACH,aAAa,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAChD,IAAI,CAACJ,SAAS,GAAGI,IAAI,CAACC,QAAQ;MAC9B,IAAI,CAACR,YAAY,CAACS,iBAAiB,CAAC,IAAI,CAACN,SAAS,CAAC,CAACG,SAAS,CAAEI,MAAe,IAAI;QAChF,IAAI,CAACR,iBAAiB,CAACS,IAAI,CAACD,MAAM,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACAE,iBAAiBA,CAACC,KAAiB;IACjC,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAkC;IAE9D,IAAID,aAAa,EAAE;MACjB,IAAIA,aAAa,CAACE,KAAK,CAACC,eAAe,KAAK,KAAK,EAAE;QACjDH,aAAa,CAACE,KAAK,CAACC,eAAe,GAAG,MAAM;OAC7C,MAAM;QACLH,aAAa,CAACE,KAAK,CAACC,eAAe,GAAG,KAAK;;;EAGjD;EAEAC,UAAUA,CAACL,KAAiB;IAC1B,MAAMC,aAAa,GAAGD,KAAK,CAACE,aAAkC;IAE9D,IAAID,aAAa,EAAE;MACjB,IAAIA,aAAa,CAACE,KAAK,CAACC,eAAe,KAAK,KAAK,EAAE;QACjDH,aAAa,CAACE,KAAK,CAACC,eAAe,GAAG,MAAM;OAC7C,MAAM;QACLH,aAAa,CAACE,KAAK,CAACC,eAAe,GAAG,KAAK;QAC3CE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;;EAOjC;CAED;AA3CYvB,iBAAiB,GAAAwB,UAAA,EAL7B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW3B,iBAAiB,CA2C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}