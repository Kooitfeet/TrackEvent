{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/event.service\";\nexport class EventResolver {\n  constructor(eventService) {\n    this.eventService = eventService;\n  }\n  resolve(route, state) {\n    return this.eventService.findAll();\n  }\n  static #_ = this.ɵfac = function EventResolver_Factory(t) {\n    return new (t || EventResolver)(i0.ɵɵinject(i1.EventService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventResolver,\n    factory: EventResolver.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["EventResolver","constructor","eventService","resolve","route","state","findAll","_","i0","ɵɵinject","i1","EventService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\guigu\\Desktop\\EPF\\5A\\java\\TrackEvent\\Front-end\\src\\app\\card-event\\event.resolver.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\"\r\nimport { Observable } from \"rxjs\"\r\nimport {EventService} from \"../services/event.service\";\r\nimport {Event} from \"../models/event.model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class EventResolver implements Resolve<Event[]> {\r\n  constructor(private eventService: EventService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Event[]> {\r\n    return this.eventService.findAll()\r\n  }\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,aAAa;EACxBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAChC;EAEAC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,OAAO,IAAI,CAACH,YAAY,CAACI,OAAO,EAAE;EACpC;EAAC,QAAAC,CAAA,G;qBANUP,aAAa,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbZ,aAAa;IAAAa,OAAA,EAAbb,aAAa,CAAAc,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}